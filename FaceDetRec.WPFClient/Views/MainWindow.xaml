<Window x:Class="FaceDetRec.WPFClient.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:converters="clr-namespace:FaceDetRec.WPFClient.Converters"
        mc:Ignorable="d"
        Title="Face Detection and Recognition Tool by ka_res © 2018" Height="511" Width="1220" ResizeMode="NoResize">

    <Window.Resources>
        <converters:BitmapToImageSourceConverter x:Key="BitmapToImageSourceConverter"/>
        <converters:BoolToSolidColorBrushConverter x:Key="BoolToSolidColorBrushConverter"></converters:BoolToSolidColorBrushConverter>
        <SolidColorBrush x:Key="TransparentHunter" Color="DarkGray" Opacity="0.3"></SolidColorBrush>
        <SolidColorBrush x:Key="NoStreamBlack" Color="Black"></SolidColorBrush>
        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Gray" />
        <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Gray" />
        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Gray"/>

        <DataTemplate x:Key="ListBoxItemCamerasTemplate">
            <RadioButton GroupName="Cameras"
                         Content="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=Content}" 
                         IsChecked="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected}" />
        </DataTemplate>

        <DataTemplate x:Key="ListBoxItemRecognizersTemplate">
            <RadioButton GroupName="Recognizers"
                         Content="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=Content}" 
                         IsChecked="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected}" />
        </DataTemplate>

        <Style x:Key="ItemContainerStyle"
               TargetType="{x:Type ListBoxItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border Name="Bd"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected"
                                     Value="true">
                                <Setter TargetName="Bd"
                                        Property="Background"
                                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter TargetName="Bd"
                                        Property="Opacity"
                                        Value="0.7"/>
                                <Setter Property="Foreground"
                                        Value="#e1e1e1"/>
                            </Trigger>
                            <Trigger Property="IsEnabled"
                                     Value="false">
                                <Setter Property="Foreground"
                                        Value="#e1e1e1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ServiceButtonStyle" TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}">
                            <Grid >
                                <ContentPresenter HorizontalAlignment="Center" 
        	                           VerticalAlignment="Center" Name="contentShadow" >
                                </ContentPresenter>
                                <ContentPresenter HorizontalAlignment="Center" 
                                    VerticalAlignment="Center" Name="content"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid Background="#111111">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="9*"></ColumnDefinition>
            <ColumnDefinition Width="8*"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Canvas Grid.Column="0" Name="PreviewStackPanel" Background="{StaticResource NoStreamBlack}">
            <Image Source="{Binding MainControls.TheFrame, Converter={StaticResource BitmapToImageSourceConverter}}" Width="640" 
                   Height="480" Name="ImageContent" Stretch="Fill"></Image>
            <DockPanel Background="LightGray" 
                       Opacity="0.45" Margin="25" Height="200" Width="150">
                <TextBlock FontSize="16" Margin="10,10,10,5" TextWrapping="Wrap"
                           Foreground="Black" FontFamily="Verdana" DockPanel.Dock="Top"
                       Text="{Binding MainControls.DetectedName}" FontWeight="ExtraBold">

                </TextBlock>
                <TextBlock FontSize="12" Margin="10,0,10,5" TextWrapping="Wrap" DockPanel.Dock="Top" 
                           Foreground="Black" FontFamily="Verdana" 
                       Text="{Binding MainControls.DetectedAge}" FontWeight="Normal">

                </TextBlock>
                <TextBlock FontSize="12" Margin="10,0,10,5" TextWrapping="Wrap" 
                           Foreground="Black" FontFamily="Verdana" DockPanel.Dock="Top" 
                       Text="{Binding MainControls.DetectedAddress}" FontWeight="Normal">

                </TextBlock>
                <TextBlock TextWrapping="Wrap" DockPanel.Dock="Top"
                FontSize="12" Margin="10,0,10,5" Foreground="Black" FontFamily="Verdana" 
                       Text="{Binding MainControls.DetectedDetails}" FontWeight="Normal">
                </TextBlock>
                <DockPanel.Style>
                    <Style>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding MainControls.IsAnyFaceMarked}" Value="false">
                                <Setter Property="DockPanel.Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding MainControls.IsAnyFaceMarked}" Value="true">
                                <Setter Property="DockPanel.Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DockPanel.Style>
            </DockPanel>
        </Canvas>
        <StackPanel Margin="15" Grid.Column="1" Name="ControlStackPanel" Orientation="Vertical">
            <StackPanel Height="150" Orientation="Vertical">
                <StackPanel Orientation=" Horizontal" HorizontalAlignment="Right">
                    <Label Content="Konfiguracja detekcji i rozpoznawania" FontWeight="Bold" Foreground="DarkGray" 
                           Width="225" HorizontalAlignment="Left"></Label>
                </StackPanel>
                <Separator Height="5"></Separator>
                <StackPanel Orientation="Horizontal">
                    <DockPanel HorizontalAlignment="Left">
                        <ListBox ItemsSource="{Binding MainControls.AvailableVideoInputs}" DockPanel.Dock="Left"
                             SelectedItem="{Binding MainControls.SelectedVideoInput}"
                             BorderBrush="Transparent"
                             Background="Transparent"
                             Foreground="#9f9f9f"
                             ItemTemplate="{StaticResource ListBoxItemCamerasTemplate}" 
                             ItemContainerStyle="{StaticResource ItemContainerStyle}"
                             Width="200"
                             Margin="5,10,0,5" 
                             IsEnabled="{Binding MainControls.IsDeviceChangeEnabled}"
                             ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged" >
                                    <i:InvokeCommandAction Command="{Binding Methods.ChangeDevice}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <ListBox.Style>
                                <Style TargetType="{x:Type ListBox}">
                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Foreground" Value="Gray" />
                                            <Setter Property="Background" Value="Transparent" />
                                            <Setter Property="Opacity" Value="0.3"></Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ListBox.Style>
                        </ListBox>
                    </DockPanel>
                    <DockPanel HorizontalAlignment="Right">
                        <ListBox ItemsSource="{Binding MainControls.Recognizers}" DockPanel.Dock="Left"
                                 SelectedItem="{Binding MainControls.SelectedRecognizer}"
                                 BorderBrush="Transparent"
                                 Background="Transparent"
                                 Foreground="#9f9f9f"
                                 ItemTemplate="{StaticResource ListBoxItemRecognizersTemplate}" 
                                 ItemContainerStyle="{StaticResource ItemContainerStyle}"
                                 Width="200"
                                 Margin="10,10,0,5" 
                                 IsEnabled="{Binding MainControls.IsDeviceChangeEnabled}"
                                 ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged" >
                                    <i:InvokeCommandAction Command="{Binding Methods.SetRecognizer}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <ListBox.Style>
                                <Style TargetType="{x:Type ListBox}">
                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Foreground" Value="Gray" />
                                            <Setter Property="Background" Value="Transparent" />
                                            <Setter Property="Opacity" Value="0.3"></Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ListBox.Style>
                        </ListBox>
                    </DockPanel>
                    <DockPanel>
                        <Button Command="{Binding Methods.ToggleCameraService}" 
                                Content="{Binding MainControls.ServiceButtonText}" 
                                Style="{StaticResource ServiceButtonStyle}"
                                Height="36" Width="86" HorizontalAlignment="Right"
                                Margin="10, 10, 5, 0" Background="DarkGray" Foreground="#000000"
                                VerticalAlignment="Top" HorizontalContentAlignment="Right" DockPanel.Dock="Top">
                        </Button>
                    </DockPanel>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <StackPanel Orientation="Vertical" HorizontalAlignment="Left">
                        <DockPanel HorizontalAlignment="Left" Margin="10, 0, 0, 0">
                            <CheckBox HorizontalAlignment="Left" DockPanel.Dock="Left" Margin="5,0,0,0" IsEnabled="{Binding MainControls.IsDeviceChangeEnabled}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click" >
                                        <i:InvokeCommandAction Command="{Binding Methods.ShouldDetectEyes}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </CheckBox>
                            <TextBlock Text="Detekcja oczu" DockPanel.Dock="Left" Foreground="DarkGray" 
                                   HorizontalAlignment="Right" Margin="5,0,0,0"></TextBlock>
                        </DockPanel>
                        <DockPanel HorizontalAlignment="Left" Margin="10, 0, 0, 0">
                            <CheckBox HorizontalAlignment="Left" DockPanel.Dock="Left" Margin="5,0,0,0" IsEnabled="{Binding MainControls.IsDeviceChangeEnabled}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click" >
                                        <i:InvokeCommandAction Command="{Binding Methods.ShouldAlwaysRetrain}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </CheckBox>
                            <TextBlock Text="Wymuś ponowne trenowanie" DockPanel.Dock="Left" Foreground="DarkGray" 
                                   HorizontalAlignment="Right" Margin="5,0,0,0"></TextBlock>
                        </DockPanel>
                    </StackPanel>
                    <StackPanel HorizontalAlignment="Right" Margin="200,0,0,0">
                        <DockPanel HorizontalAlignment="Left" Margin="10, 0, 0, 0">
                            <TextBlock Text="Zapisuj do plików" DockPanel.Dock="Left" Foreground="DarkGray" 
                                       HorizontalAlignment="Right" Margin="5,0,0,0"></TextBlock>
                            <CheckBox HorizontalAlignment="Left" DockPanel.Dock="Left" Margin="5,0,0,0" IsEnabled="{Binding MainControls.IsDeviceChangeEnabled}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click" >
                                        <i:InvokeCommandAction Command="{Binding Methods.ChangeDataMode}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </CheckBox>
                        </DockPanel>
                    </StackPanel>
                </StackPanel>
                
            </StackPanel>
            <StackPanel Height="300">
                <Label Content="Zapis wykrytej twarzy" FontWeight="Bold" HorizontalAlignment="Right" 
                       Foreground="DarkGray" Margin="2,0,-2,0"></Label>
                <Separator Height="10"></Separator>
                <StackPanel Background="{StaticResource TransparentHunter}" Orientation="Horizontal" HorizontalAlignment="Center" Margin="0" Width="470" Height="225">
                    <StackPanel Orientation="Vertical" Width="295" HorizontalAlignment="Left">
                        <TextBlock Text="Nazwa" Foreground="LightGray" Margin="10,5,0,0" FontSize="10" Width="30" HorizontalAlignment="Left"></TextBlock>
                        <ComboBox IsEditable="True" IsEnabled="{Binding MainControls.IsSaveEnabled}" ItemsSource="{Binding MainControls.KnownPeople}" 
                                  HorizontalAlignment="Left" SelectedItem="{Binding MainControls.Name}" Margin="10,0,2,0" Width="280"
                                  Text="{Binding MainControls.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged" >
                                    <i:InvokeCommandAction Command="{Binding Methods.LoadPersonalData}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ComboBox>
                        <TextBlock HorizontalAlignment="Left" Text="Wiek" Foreground="LightGray" Margin="10,2,0,0" FontSize="10" Width="130"></TextBlock>
                        <TextBox HorizontalAlignment="Left" IsEnabled="{Binding MainControls.IsSaveEnabled}" Margin="10,0,0,0" Width="280" Text="{Binding MainControls.Age, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                        <TextBlock HorizontalAlignment="Left" Text="Adres" Foreground="LightGray" Margin="10,2,0,0" FontSize="10" Width="130"></TextBlock>
                        <TextBox HorizontalAlignment="Left" IsEnabled="{Binding MainControls.IsSaveEnabled}" MinLines="2" Margin="10,0,0,0" Width="280" Text="{Binding MainControls.Address, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                        <TextBlock HorizontalAlignment="Left" Text="Szczegóły" Foreground="LightGray" Margin="10,2,0,0" FontSize="10" Width="130"></TextBlock>
                        <TextBox HorizontalAlignment="Left" IsEnabled="{Binding MainControls.IsSaveEnabled}" MinLines="5" Margin="10,0,0,5" Width="280" Text="{Binding MainControls.Details, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                    </StackPanel>
                    <StackPanel Orientation="Vertical" Width="180">
                        <StackPanel Background="{StaticResource NoStreamBlack}" Margin="15,10,15,10" Height="150" Width="150">
                            <Image Stretch="Fill" x:Name="FaceImageContent" HorizontalAlignment="Right"
                                   Source="{Binding MainControls.TheNewestFace, Converter={StaticResource BitmapToImageSourceConverter}}" 
                                   Height="150" Width="150"/>
                        </StackPanel>
                        <StackPanel Orientation="Vertical">
                            <Button Content="Dodaj" Command="{Binding Methods.SaveDetected}" Margin="15,0,15,5" HorizontalAlignment="Center" Width="150" Height="20" VerticalAlignment="Top"
                                    Background="DarkGray" Style="{StaticResource ServiceButtonStyle}" IsEnabled="{Binding MainControls.IsSaveEnabled}"></Button>
                            <Button Content="Trenuj" Command="{Binding Methods.RetrainRecognizer}" Margin="15,0,15,0" HorizontalAlignment="Center" Width="150" Height="20" VerticalAlignment="Top"
                                    Background="DarkGray" Style="{StaticResource ServiceButtonStyle}" IsEnabled="{Binding MainControls.IsSaveEnabled}"></Button>

                        </StackPanel>
                    </StackPanel>
                </StackPanel>
                <Separator Height="7"></Separator>
                <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom">
                    <Label Content="{Binding MainControls.StatusText}" VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="520" Foreground="DarkGray" FontSize="9"></Label>
                    <Rectangle HorizontalAlignment="Right" Width="10" Height="10" Fill="{Binding MainControls.IsNewUpdate, Converter={StaticResource BoolToSolidColorBrushConverter}}">
                    </Rectangle>
                </StackPanel>
            </StackPanel>
        </StackPanel>
    </Grid>
</Window>



